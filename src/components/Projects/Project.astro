---
import { Image } from "astro:assets";
import StackTechs from "./StackTechs";
import { GithubIcon } from "../../assets/icons/GitHubIcon";
import AnimatedLink from "../AnimatedLink/AnimatedLink";

type ImageProp = {
  height: number;
  width: number;
  src: string;
  format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
};

type Props = {
  data: {
    image: {
      url: ImageProp;
      alt: string;
    };
    infoName: {
      url: string;
      alt: string;
    };
    description: string;
    stack: string[];
    urlGitHub?: string | undefined;
  };
};

const { data } = Astro.props;
---

<div class="flex flex-col py-3 project h-full">
  <div class="flex justify-between items-center my-3 min-h-[30px]">
    <AnimatedLink
      client:load
      href={data.infoName.url}
      className="text-darkNavigation dark:text-textLight flex items-center"
    >
      {data.infoName.alt}
    </AnimatedLink>

    {
      data.urlGitHub ? (
        <a
          class="text-darkNavigation dark:text-textMessage p-0"
          href={data.urlGitHub}
          target="_blank"
          rel="noopener noreferrer"
          title={data.infoName.alt}
          aria-label={data.infoName.alt}
        >
          <GithubIcon client:load className="p-0" />
        </a>
      ) : null
    }
  </div>

  <div
    class="flex bg-lightCard dark:bg-navigation rounded-md p-3 mb-2 shadow-inner"
  >
    <Image
      class="aspect-video w-full rounded-lg object-fill md:h-[200px] lg:h-[300px]"
      src={data.image.url}
      alt={data.image.alt}
      title={data.image.alt}
      loading={"lazy"}
    />
  </div>

  <div
    class="flex flex-col bg-lightCard dark:bg-navigation rounded-md p-3 shadow-inner"
  >
    <div class="flex gap-2 mb-3">
      {
        data.stack.length ? (
          <StackTechs client:only="react" techs={data.stack} />
        ) : null
      }
    </div>
    <p class="dark:text-textLight" data-description={data.description}>
      {data.description}
    </p>
  </div>
</div>

<script>
  const $descriptions = document.querySelectorAll("[data-description]");

  $descriptions.forEach((description) => {
    const aLink = document.createElement("a");
    aLink.href = "https://www.youtube.com/@GentlemanProgramming";
    aLink.target = "_blank";
    aLink.textContent = "Gentleman Programming";
    aLink.rel = "noreferrer noopener";
    aLink.classList.add(
      `underline`,
      "transition-all",
      "duration-300",
      "ease-in-out",
      "hover:opacity-80",
      "text-blueLink"
    );

    if (description.textContent?.includes("Gentleman Programming")) {
      const separatedDescription = description.textContent.split(
        "Gentleman Programming"
      );

      description.innerHTML = `${separatedDescription[0]}`;
      description.appendChild(aLink);
      description.innerHTML += `${separatedDescription[1]}`;
    }
  });
</script>
